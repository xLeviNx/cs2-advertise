name: Build

on:
  push:
    paths-ignore:
      - LICENSE
      - README.md

  pull_request:
    paths-ignore:
      - LICENSE
      - README.md

  workflow_dispatch:

jobs:
  build:
    name: Build on ${{ matrix.os_short }}
    runs-on: ${{ matrix.os }}
    env:
        HL2SDKCS2: ${{ github.workspace }}/project/hl2sdk-cs2
    strategy:
      fail-fast: false
      matrix:
        # Compile on Linux
        os:
          - ubuntu-20.04

        include:
          - os: ubuntu-20.04
            os_short: linux
    steps:
      # Setup Python for AMBuild.
      - name: Setup Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      # Install dependencies
      - name: Install AMBuild
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install git+https://github.com/alliedmodders/ambuild

      - name: Install dependencies
        if: runner.os == 'Linux'
        run: |
          sudo dpkg --add-architecture i386
          sudo apt-get update
          sudo apt-get install -y clang g++-multilib

      - name: Select clang compiler
        if: runner.os == 'Linux'
        run: |
          echo "CC=clang" >> $GITHUB_ENV
          echo "CXX=clang++" >> $GITHUB_ENV
          clang --version
          clang++ --version

      # Checkout repos
      - name: Checkout
        uses: actions/checkout@v4
        with:
          path: project

      - name: Checkout hl2sdk-cs2
        uses: actions/checkout@v4
        with:
          repository: alliedmodders/hl2sdk
          ref: cs2
          path: project/hl2sdk-cs2
          submodules: recursive

      - name: Checkout hl2sdk-manifests
        uses: actions/checkout@v4
        with:
          repository: alliedmodders/hl2sdk-manifests
          ref: master
          path: project/hl2sdk-manifests
          submodules: recursive

      - name: Checkout Metamod:Source
        uses: actions/checkout@v4
        with:
          repository: alliedmodders/metamod-source
          ref: master
          path: project/metamod-source
          submodules: recursive

      # Build
      - name: Build
        shell: bash
        run: |
          cd project && mkdir build && cd build
          python ../configure.py --hl2sdk-root=HL2SDKCS2 --enable-optimize --plugin-name=advertisement --plugin-alias=advertisement --sdks=cs2 --targets=x86_64
          ambuild

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ runner.os }}
          path: project/build/package

  release:
    name: Release
    if: startsWith(github.ref, 'refs/tags/')
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3

      - name: Package
        run: |
          7z a -mx9 linux.zip ./Linux/*
      - name: Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: '*.zip'
          tag: ${{ github.ref }}
          file_glob: true
